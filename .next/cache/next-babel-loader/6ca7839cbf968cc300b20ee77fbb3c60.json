{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../store/actions/test';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"h1\", null, \"Home page \"), __jsx(\"div\", null, this.props.posts.map(function (post) {\n        return __jsx(\"p\", {\n          key: post.id\n        }, post.title);\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var reduxStore, posts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                reduxStore = _ref.reduxStore;\n                _context.next = 3;\n                return reduxStore.dispatch(fetchPosts());\n\n              case 3:\n                posts = reduxStore.getState().testPage.posts; //console.log('STATE!!!', posts);\n\n                return _context.abrupt(\"return\", {\n                  posts: posts\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\n;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar mapStateToProps = function mapStateToProps(dispatch) {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/home/sergey/Documents/NextJS/examples/with-redux-thunk-app/pages/index.js"],"names":["React","connect","fetchPosts","Index","props","posts","map","post","id","title","reduxStore","dispatch","getState","testPage","Component","mapDispatchToProps","mapStateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,uBAA3B;;IAEMC,K;;;;;;;;;;;;;6BAUI;AACR,aACC,mBACC,+BADD,EAEC,mBAGE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAAI;AAAG,UAAA,GAAG,EAAEA,IAAI,CAACC;AAAb,WAAmBD,IAAI,CAACE,KAAxB,CAAJ;AAAA,OAAzB,CAHF,CAFD,CADD;AAYA;;;;;;;;;;;;AArB8BC,gBAAAA,U,QAAAA,U;;uBACxBA,UAAU,CAACC,QAAX,CAAoBT,UAAU,EAA9B,C;;;AACCG,gBAAAA,K,GAAQK,UAAU,CAACE,QAAX,GAAsBC,QAAtB,CAA+BR,K,EAC7C;;iDAEO;AAAEA,kBAAAA,KAAK,EAALA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAPUL,KAAK,CAACc,S;;AAyBzB;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAJ,QAAQ,EAAI;AACrC,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,QAAQ,EAAI;AAClC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAeV,OAAO,CAACe,eAAD,EAAkBD,kBAAlB,CAAP,CAA6CZ,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { fetchPosts } from '../store/actions/test';\n\nclass Index extends React.Component {\n\n\tstatic async getInitialProps({ reduxStore }) {\n\t await reduxStore.dispatch(fetchPosts());\n\t \tconst posts = reduxStore.getState().testPage.posts;\n\t  //console.log('STATE!!!', posts);\n\n\t  return { posts };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Home page </h1>\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.props.posts.map(post => <p key={post.id} >{post.title}</p>)\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nconst mapStateToProps = dispatch => {\n  return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\n"]},"metadata":{},"sourceType":"module"}