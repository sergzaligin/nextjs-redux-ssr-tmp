{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_POSTS } from '../types/test';\nvar initialState = {\n  posts: null\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.posts\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/sergey/Documents/NextJS/examples/with-redux-thunk-app/store/reducers/test-reducer.js"],"names":["SET_POSTS","initialState","posts","state","action","type"],"mappings":";;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,eAA1B;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAIA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKL,SAAL;AACC,+BACIG,KADJ;AAECD,QAAAA,KAAK,EAAEE,MAAM,CAACF;AAFf;;AAID;AACC,aAAOC,KAAP;AAPF;AASA,CAVD","sourcesContent":["import { SET_POSTS } from '../types/test';\n\nconst initialState = {\n\tposts: null,\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_POSTS: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.posts,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n\n"]},"metadata":{},"sourceType":"module"}