{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { postsAPI } from '../api';\nimport Posts from '../components/Posts/Posts';\nimport { fetchPosts } from '../test-reducer';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"h1\", null, \"Home page \", this.props.posts), __jsx(\"div\", null, this.props.posts ? this.props.posts.map(function (post) {\n        return __jsx(\"p\", {\n          key: post.id\n        }, post.title);\n      }) : 'load'));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, isServer, pathname, query, widget1Data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store, isServer = _ref.isServer, pathname = _ref.pathname, query = _ref.query;\n                _context.next = 3;\n                return store.dispatch(fetchPosts());\n\n              case 3:\n                widget1Data = _context.sent;\n                console.log('===>', widget1Data);\n                return _context.abrupt(\"return\", {\n                  posts: widget1Data\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.testPage.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPosts: fetchPosts\n})(Index);","map":{"version":3,"sources":["/home/sergey/Documents/NextJS/examples/with-redux-thunk-app/pages/index.js"],"names":["React","connect","postsAPI","Posts","fetchPosts","Index","props","posts","map","post","id","title","store","isServer","pathname","query","dispatch","widget1Data","console","log","Component","mapStateToProps","state","testPage"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;;IAEMC,K;;;;;;;;;;;;;6BAQI;AACR,aACC,mBACC,gCAAe,KAAKC,KAAL,CAAWC,KAA1B,CADD,EAEC,mBAEE,KAAKD,KAAL,CAAWC,KAAX,GACA,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAAI;AAAG,UAAA,GAAG,EAAEA,IAAI,CAACC;AAAb,WAAmBD,IAAI,CAACE,KAAxB,CAAJ;AAAA,OAAzB,CADA,GAGA,MALF,CAFD,CADD;AAaA;;;;;;;;;;;;AApB8BC,gBAAAA,K,QAAAA,K,EAAOC,Q,QAAAA,Q,EAAUC,Q,QAAAA,Q,EAAUC,K,QAAAA,K;;uBAC9BH,KAAK,CAACI,QAAN,CAAeZ,UAAU,EAAzB,C;;;AAApBa,gBAAAA,W;AACNC,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,WAApB;iDACO;AAAEV,kBAAAA,KAAK,EAAEU;AAAT,iB;;;;;;;;;;;;;;;;;;;EALUjB,KAAK,CAACoB,S;;AAwBzB;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACNf,IAAAA,KAAK,EAAEe,KAAK,CAACC,QAAN,CAAehB;AADhB,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAEjB,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCC,KAAzC,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { postsAPI } from '../api';\n\nimport Posts from '../components/Posts/Posts';\n\nimport { fetchPosts } from '../test-reducer';\n\nclass Index extends React.Component {\n\n\tstatic async getInitialProps({ store, isServer, pathname, query }) {\n\t  const widget1Data = await store.dispatch(fetchPosts());\n\t  console.log('===>', widget1Data);\n\t  return { posts: widget1Data };\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Home page {this.props.posts}</h1>\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.props.posts ?\n\t\t\t\t\t\tthis.props.posts.map(post => <p key={post.id} >{post.title}</p>)\n\t\t\t\t\t\t:\n\t\t\t\t\t\t'load'\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n};\n\nconst mapStateToProps = (state) => {\n    return {\n    \tposts: state.testPage.posts\n    };\n};\n\nexport default connect(mapStateToProps, { fetchPosts })(Index);\n"]},"metadata":{},"sourceType":"module"}